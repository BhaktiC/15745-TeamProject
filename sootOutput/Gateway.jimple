public class Gateway extends java.lang.Object
{
    static java.util.Map data;
    public static final Cache_LRU cache;

    public void <init>()
    {
        Gateway r0;

        r0 := @this: Gateway;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    public static java.lang.String getInfo(java.lang.String)
    {
        java.lang.String r0, $r1;
        Cache_LRU cacheLocal;

        r0 := @parameter0: java.lang.String;

        cacheLocal = <Gateway: Cache_LRU cache>;

        $r1 = virtualinvoke cacheLocal.<Cache_LRU: java.lang.Object get(java.lang.Object)>(r0);

        if null != $r1 goto label2;

        if null == $r1 goto label1;

     label1:
        $r1 = staticinvoke <Gateway: java.lang.String getInfoCall(java.lang.String)>(r0);

        virtualinvoke cacheLocal.<Cache_LRU: void put(java.lang.Object,java.lang.Object)>(r0, $r1);

     label2:
        $r1 = (java.lang.String) $r1;

        return $r1;
    }

    public static java.lang.String getInfoCall(java.lang.String)
    {
        java.io.PrintStream $r0;
        java.util.Map $r2;
        java.lang.Object $r3;
        java.lang.String r1, $r4;

        r1 := @parameter0: java.lang.String;

        $r0 = <java.lang.System: java.io.PrintStream out>;

        virtualinvoke $r0.<java.io.PrintStream: void println(java.lang.String)>("making actual call");

        $r2 = <Gateway: java.util.Map data>;

        $r3 = interfaceinvoke $r2.<java.util.Map: java.lang.Object get(java.lang.Object)>(r1);

        $r4 = (java.lang.String) $r3;

        return $r4;
    }

    public static void main(java.lang.String[]) throws java.lang.Exception
    {
        java.io.PrintStream $r0, $r3;
        java.lang.String[] r10, r11;
        java.util.concurrent.ThreadLocalRandom $r1;
        java.util.Map $r8;
        int $i0, i1, i2;
        java.lang.String $r2, $r4, $r5, $r6, $r7, $r9;

        r10 := @parameter0: java.lang.String[];

        i1 = 1;

     label1:
        if i1 >= 150 goto label2;

        $r6 = staticinvoke <java.lang.Integer: java.lang.String toString(int)>(i1);

        $r7 = dynamicinvoke "makeConcatWithConstants" <java.lang.String (java.lang.String)>($r6) <java.lang.invoke.StringConcatFactory: java.lang.invoke.CallSite makeConcatWithConstants(java.lang.invoke.MethodHandles$Lookup,java.lang.String,java.lang.invoke.MethodType,java.lang.String,java.lang.Object[])>("customer \u0001");

        $r8 = <Gateway: java.util.Map data>;

        $r9 = staticinvoke <java.lang.Integer: java.lang.String toString(int)>(i1);

        interfaceinvoke $r8.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>($r9, $r7);

        i1 = i1 + 1;

        goto label1;

     label2:
        r11 = newarray (java.lang.String)[150];

        i2 = 1;

     label3:
        if i2 >= 150 goto label4;

        $r5 = staticinvoke <java.lang.Integer: java.lang.String toString(int)>(i2);

        r11[i2] = $r5;

        i2 = i2 + 1;

        goto label3;

     label4:
        $r0 = <java.lang.System: java.io.PrintStream out>;

        virtualinvoke $r0.<java.io.PrintStream: void println(java.lang.String)>(null);

     label5:
        $r1 = staticinvoke <java.util.concurrent.ThreadLocalRandom: java.util.concurrent.ThreadLocalRandom current()>();

        $i0 = virtualinvoke $r1.<java.util.concurrent.ThreadLocalRandom: int nextInt(int,int)>(0, 150);

        $r3 = <java.lang.System: java.io.PrintStream out>;

        $r2 = r11[$i0];

        $r4 = staticinvoke <Gateway: java.lang.String getInfo(java.lang.String)>($r2);

        virtualinvoke $r3.<java.io.PrintStream: void println(java.lang.String)>($r4);

        staticinvoke <java.lang.Thread: void sleep(long)>(200L);

        goto label5;
    }

    static void <clinit>()
    {
        java.util.HashMap $r0;
        Cache_LRU cacheLocal;

        cacheLocal = new Cache_LRU;

        specialinvoke cacheLocal.<Cache_LRU: void <init>()>();

        $r0 = new java.util.HashMap;

        specialinvoke $r0.<java.util.HashMap: void <init>()>();

        <Gateway: java.util.Map data> = $r0;

        <Gateway: Cache_LRU cache> = cacheLocal;

        return;
    }
}
