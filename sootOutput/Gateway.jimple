public class Gateway extends java.lang.Object
{
    private org.springframework.web.client.RestTemplate restTemplate;
    private static java.lang.String url;
    public static final java.lang.String ACCEPT_HEADER_KEY;
    public static final java.lang.String ACCEPT_HEADER_VALUE;
    static Cache cache;

    public void <init>()
    {
        Gateway r0;

        r0 := @this: Gateway;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    private org.springframework.http.HttpEntity setHeaders()
    {
        org.springframework.http.HttpEntity $r4;
        Gateway r2;
        org.springframework.http.HttpHeaders $r3;
        org.springframework.util.MultiValueMap $r5;

        r2 := @this: Gateway;

        $r3 = new org.springframework.http.HttpHeaders;

        specialinvoke $r3.<org.springframework.http.HttpHeaders: void <init>()>();

        virtualinvoke $r3.<org.springframework.http.HttpHeaders: void add(java.lang.String,java.lang.String)>("Accept", "application/json");

        $r4 = new org.springframework.http.HttpEntity;

        $r5 = (org.springframework.util.MultiValueMap) $r3;

        specialinvoke $r4.<org.springframework.http.HttpEntity: void <init>(org.springframework.util.MultiValueMap)>($r5);

        return $r4;
    }

    public java.lang.String getInfo(java.lang.String)
    {
        Gateway r3;
        java.lang.String r0, $r1, $r2, $r4;
        com.example.gateway.Gateway $r5;
        Cache cacheLocal;

        r3 := @this: Gateway;
        r0 := @parameter0: java.lang.String;
        $r1 = <com.example.gateway.Gateway: java.lang.String url>;
        $r5 = (com.example.gateway.Gateway) r3;
        cacheLocal = <Gateway: Cache cache>;
        $r4 = virtualinvoke cacheLocal.<Cache: java.lang.Object get(java.lang.Object)>($r1);

        if null != $r4 goto label2;

        if null == $r4 goto label1;

     label1:
        $r4 = virtualinvoke $r5.<com.example.gateway.Gateway: java.lang.String getInfoCall(java.lang.String)>($r2);
        virtualinvoke cacheLocal.<Cache: void put(java.lang.Object,java.lang.Object)>($r2, $r4);

     label2:
        $r4 = (java.lang.String) $r4;
        return $r4;
    }

    public java.lang.String getInfoCall(java.lang.String)
    {
        java.lang.Throwable $r9, $r13;
        java.lang.Object[] $r5;
        com.example.gateway.Gateway $r17, $r18;
        Gateway r0;
        java.lang.String r1, $r8, $r11, $r12, $r15, $r16;
        org.springframework.web.client.RestTemplate $r2;
        java.io.PrintStream $r10, $r14;
        org.springframework.web.client.HttpServerErrorException $r20;
        org.springframework.http.HttpMethod $r3;
        org.springframework.web.client.HttpClientErrorException $r19;
        org.springframework.http.HttpEntity $r4;
        org.springframework.http.ResponseEntity $r6;
        java.lang.Object $r7;

        r0 := @this: Gateway;

        r1 := @parameter0: java.lang.String;

     label1:
        $r17 = (com.example.gateway.Gateway) r0;

        $r2 = $r17.<com.example.gateway.Gateway: org.springframework.web.client.RestTemplate restTemplate>;

        $r3 = <org.springframework.http.HttpMethod: org.springframework.http.HttpMethod GET>;

        $r18 = (com.example.gateway.Gateway) r0;

        $r4 = virtualinvoke $r18.<com.example.gateway.Gateway: org.springframework.http.HttpEntity setHeaders()>();

        $r5 = newarray (java.lang.Object)[0];

        $r6 = virtualinvoke $r2.<org.springframework.web.client.RestTemplate: org.springframework.http.ResponseEntity exchange(java.lang.String,org.springframework.http.HttpMethod,org.springframework.http.HttpEntity,java.lang.Class,java.lang.Object[])>(r1, $r3, $r4, class "Ljava/lang/String;", $r5);

        $r7 = virtualinvoke $r6.<org.springframework.http.ResponseEntity: java.lang.Object getBody()>();

        $r8 = (java.lang.String) $r7;

     label2:
        return $r8;

     label3:
        $r13 := @caughtexception;

        $r14 = <java.lang.System: java.io.PrintStream out>;

        $r19 = (org.springframework.web.client.HttpClientErrorException) $r13;

        $r15 = virtualinvoke $r19.<org.springframework.web.client.HttpClientErrorException: java.lang.String getMessage()>();

        $r16 = dynamicinvoke "makeConcatWithConstants" <java.lang.String (java.lang.String)>($r15) <java.lang.invoke.StringConcatFactory: java.lang.invoke.CallSite makeConcatWithConstants(java.lang.invoke.MethodHandles$Lookup,java.lang.String,java.lang.invoke.MethodType,java.lang.String,java.lang.Object[])>("Client error occurred (4xx) with message: \u0001");

        virtualinvoke $r14.<java.io.PrintStream: void println(java.lang.String)>($r16);

        throw $r13;

     label4:
        $r9 := @caughtexception;

        $r10 = <java.lang.System: java.io.PrintStream out>;

        $r20 = (org.springframework.web.client.HttpServerErrorException) $r9;

        $r11 = virtualinvoke $r20.<org.springframework.web.client.HttpServerErrorException: java.lang.String getMessage()>();

        $r12 = dynamicinvoke "makeConcatWithConstants" <java.lang.String (java.lang.String)>($r11) <java.lang.invoke.StringConcatFactory: java.lang.invoke.CallSite makeConcatWithConstants(java.lang.invoke.MethodHandles$Lookup,java.lang.String,java.lang.invoke.MethodType,java.lang.String,java.lang.Object[])>("Server error occurred (5xx) with message: \u0001");

        virtualinvoke $r10.<java.io.PrintStream: void println(java.lang.String)>($r12);

        throw $r9;

        catch org.springframework.web.client.HttpClientErrorException from label1 to label2 with label3;
        catch org.springframework.web.client.HttpServerErrorException from label1 to label2 with label4;
    }

    static void <clinit>()
    {
        Cache cacheLocal;

        <Gateway: java.lang.String ACCEPT_HEADER_VALUE> = "application/json";

        <Gateway: java.lang.String ACCEPT_HEADER_KEY> = "Accept";

        cacheLocal = new Cache;

        specialinvoke cacheLocal.<Cache: void <init>()>();

        <com.example.gateway.Gateway: java.lang.String url> = "http://localhost:8081/info/";

        <Gateway: Cache cache> = cacheLocal;

        return;
    }
}
